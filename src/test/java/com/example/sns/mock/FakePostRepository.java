//package com.example.sns.mock;
//
//import com.example.sns.core.post.domain.entity.Post;
//import com.example.sns.core.post.service.port.PostRepository;
//import java.util.ArrayList;
//import java.util.Collections;
//import java.util.List;
//import java.util.Objects;
//import java.util.Optional;
//import java.util.concurrent.atomic.AtomicLong;
//
//public class FakePostRepository implements PostRepository {
//    private final AtomicLong autoGeneratedId = new AtomicLong(0);
//    private final List<Post> data = Collections.synchronizedList(new ArrayList<>());
//
//    @Override
//    public Optional<Post> findById(long id) {
//        return data.stream().filter(item -> item.getId().equals(id)).findAny();
//    }
//
//
//    @Override
//    public Post save(Post post) {
//        if (post.getId() == null || post.getId() == 0) {
//            Post newPost = Post.builder()
//                    .id(autoGeneratedId.incrementAndGet())
//                    .content(post.getContent())
//                    .createdAt(post.getCreatedAt())
//                    .modifiedAt(post.getModifiedAt())
//                    .writer(post.getWriterId())
//                    .build();
//            data.add(newPost);
//            return newPost;
//        } else {
//            data.removeIf(item -> Objects.equals(item.getId(), post.getId()));
//            data.add(post);
//            return post;
//        }
//    }
//
//    @Override
//    public Post getById(long id) {
//        return data.get((int)id);
//    }
//}
